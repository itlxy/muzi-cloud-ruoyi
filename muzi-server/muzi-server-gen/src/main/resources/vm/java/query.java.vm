package ${packageName}.query;

    #foreach ($import in $importList)
import ${import};
    #end
    #if(${hasBigDecimal})
import java.math.BigDecimal;
    #end
import java.io.Serializable;
import ${packageName}.entity.${ClassName}Entity;
import ${basePackage}.common.core.annotation.QueryCondition;
import ${basePackage}.common.core.constant.DataValidateGroup;
import java.time.LocalDateTime;
import java.util.Date;
import lombok.Data;
import ${basePackage}.common.core.enums.MatchType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import ${basePackage}.common.core.annotation.Excel;
import com.fasterxml.jackson.annotation.JsonFormat;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import org.springframework.format.annotation.DateTimeFormat;
import java.util.List;

/**
 * ${functionName}查询对象
 *
 * @author ${author}
 * @date ${datetime}
 *
 */
@Data
@ApiModel(value = "${functionName}对象 ${tableName}", description = "${functionName}查询对象 ${tableName}")
public class ${ClassName}Query extends ${ClassName}Entity implements Serializable {
#foreach ($column in $columns)
    #if($column.queryType == "IN" || $column.queryType == "NOT_IN" || $column.queryType == "BETWEEN")
    #set($parentheseIndex=$column.columnComment.indexOf("（"))
    #set($AttrName=$column.javaField)
    #if($parentheseIndex != -1)
        #set($comment=$column.columnComment.substring(0, $parentheseIndex))
    #else
        #set($comment=$column.columnComment)
    #end
    #if($column.queryType == "IN" || $column.queryType == "NOT_IN" )

        /**
         * $comment 列表
         */
        @ApiModelProperty(value = "$comment 列表")
        #if($column.javaType == 'Date'||$column.javaType == 'LocalDateTime')
        @DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
        @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss", timezone = "GMT+8")
        #elseif($column.javaType == 'LocalDate')
        @DateTimeFormat(pattern = "yyyy-MM-dd")
        @JsonFormat(pattern = "yyyy-MM-dd")
        #elseif($column.javaType == 'LocalTime')
        @DateTimeFormat(pattern = "HH:mm:ss")
        @JsonFormat(pattern = "HH:mm:ss")
        #end
        @QueryCondition(column = "$column.javaField",func= MatchType.$column.queryType)
        private List<$column.javaType> ${AttrName}List;
    #elseif($column.queryType == "BETWEEN")

        /**
         * $comment 范围
         */
        @ApiModelProperty(value = "$comment 范围")
        #if($column.javaType == 'Date'||$column.javaType == 'LocalDateTime')
        @DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
        @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss", timezone = "GMT+8")
        #elseif($column.javaType == 'LocalDate')
        @DateTimeFormat(pattern = "yyyy-MM-dd")
        @JsonFormat(pattern = "yyyy-MM-dd")
        #elseif($column.javaType == 'LocalTime')
        @DateTimeFormat(pattern = "HH:mm:ss")
        @JsonFormat(pattern = "HH:mm:ss")
        #end
        @QueryCondition(column = "$column.javaField",func= MatchType.$column.queryType)
        private List<$column.javaType> ${AttrName}Range;
    #end
    #end
#end

        /**
         * 页码
         */
        @Min(value = 1, message = "页码最小为 1", groups = {DataValidateGroup.PageQuery.class})
        @Max(value = 1000, message = "页码最大为 10000", groups = {DataValidateGroup.PageQuery.class})
        private Integer pageNum;

        /**
         * 每页条数
         */
        @Min(value = 1, message = "每页条数 最小为 1", groups = {DataValidateGroup.PageQuery.class})
        @Max(value = 1000, message = "每页条数 最大为 10000", groups = {DataValidateGroup.PageQuery.class})
        private Integer pageSize;
}
